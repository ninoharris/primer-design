body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

.primer-form {
  
}
.primer-form input[type="text"] {
  font-family: monospace;
}
@keyframes shake {
  0%, 100% {
    left: -1px;
  }
  50% {
    left: 1px;
  }
}
.glow {
  /*
  animation-name: shake;
  animation-duration: 0.1s;
  animation-iteration-count: infinite;
  */
  box-shadow: 0 0 2px red;
  border: none;
  font-weight: bold;
}


/* PRIMER PREVIEW */
[class^='primer-preview'] {
  white-space: pre-wrap;
  font-family: monospace;
  font-size: 20px;
  text-align: center;
  text-transform: uppercase;
}
.RV {
  color: pink;
}
.RG {
  color: purple;
}
.FV {
  color: turquoise;
}
.FG {
  color: blue;
}
.primer-preview-reverse.active {
  animation: preview-swivel 5s ease;
}

.primer-preview-reverse.active span.l {
  animation: preview-swivel-inner 5s ease once;
  display: inline-block;
}
@keyframes preview-swivel {
  50% {
    transform: rotateY(180deg);
  }
  100% {
    transform: rotateY(180deg);
  }
}
@keyframes preview-swivel-inner {
  50% {
    transform: none;
  }
  80%, 100% {
    transform: rotateY(180deg);
  };
}


.Nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding: 5px 20px;
  margin-bottom: 20px;
  background: linear-gradient(top, #bfd255 0%,#8eb92a 50%,#72aa00 51%,#9ecb2d 100%); /* Chrome10-25,Safari5.1-6 */
}
.Nav .Logo {
  letter-spacing: -2px;
  font-size: 0.8rem;
  font-weight: bolder;
  color: white;
}


.sequence {
  font-family: monospace;
  white-space: pre-wrap;
  line-height: 1;
}
.haystack {
  user-select: none;
  position: relative;
  top: -2rem;
  /* this -2rem top: all text in haystack is inline to allow clean breaking of the sequence at 100 chars.
  'forward', 'reverse', 'position-helper', and 'codons' overlap each other, we set a big line-height (10rem).
  -2rem offsets it at the very top, but still gives us some space between characters 1-100 and 101-201 etc... */
}
.haystack .position-helper {
  top: 2rem; /* counterbalances .haystack's -2rem. */
}
.haystack .forward, .haystack .reverse {
  transition: top 0.7s ease-out;
}
.haystack .forward {
  position: relative;
  top: 0;
}
.haystack-with-URG .forward {
  top: -1rem; /* move it up by a line, gives room for URG */ 
}
.haystack .reverse {
  position: absolute;
  top: 1rem; /* OFFSET to prevent overlaps between reverse and forward */
}
.haystack-with-UFG .reverse {
  top: 2rem; /* move it up by a line, gives room for URG */
}




.multiline {
  position: relative;
}
.multiline .sequence {
  width: 100ch;
  word-break: break-all;
  line-height: 10;
}
.multiline .sequence .user-sequence {
  position: absolute;
}
.forward .multiline .user-sequence {
  top: 0.7rem; /* Place just underneath the reference sequence */
}
.reverse .multiline .user-sequence {
  top: -0.7rem;
}
.multiline .sequence [class^="offset"] {
  word-break: keep-all;
}
.multiline .codons {
  z-index: -1;
  position: absolute;
  top: 0.7rem;
  animation: fade-in 1s;
}
@keyframes fade-in {
  from { opacity: 0 }
  to { opacity: 1 }
}
.multiline .codons .codon {
  position: absolute;
}
.multiline .codons .codon:nth-of-type(2) {
  top: 1rem;
}
.multiline .codons .codon:nth-of-type(3) {
  top: 2rem;
}



.leading, .trailing, .unimportant {
  opacity: 0.45;
}
.offset-left, .offset-right {
  position: relative;
}
[class^="offset"] > span {
  position: absolute;
}
.offset-left > span {
  right: 0;
}
.offset-right > span {
  left: 0;
}
.end {
  color: #000000;
}

.position-helper {
  cursor: default;
  position: absolute;
  top: 0;
  z-index: -1;
  height: 100%;
}
.position-helper > span {
  margin-left: -1px;
  height: 100%;
  border-left: 1px solid rgba(0,0,0,0.05);
  position: relative;
  display: inline-block;
}
.position-helper span span {
  font-size: 0.6rem;
  letter-spacing: -2px;
  color: lightblue;
  position: absolute;
}

.haystack .position-helper.sequence {
  line-height: 1;
}


.helpers {
  position: relative;
}
.helpers .helper {
  cursor: default;
}
.helpers .helper:not(:first-of-type) {
  position: absolute;
  top: 0;
  left: 0;
}


.vector, .haystack {
  position: relative;
}




.hl {
  background: #DDDDDD;
}


.multiple-matches {
  position: relative;
}
.multiple-matches .multiple-match:not(:first-of-type) {
  position: absolute;
  // top: 0;
  left: 0;
}
.multiple-match .match {
  background: red;
  color: white;
  border-radius: 2px;
}

.mismatch { 
  color: red;  
}

.evaluations {
  font-size: 0.6rem;
}

.matches-enter {
  opacity: 0.1;
  top: -10px;
}
.matches-enter-active {
  transition: all 500ms ease-in;
  top: 0;
  opacity: 1;
}
.matches-leave {
  opacity: 1;
}
.matches-leave-active {
  transition: all 300ms ease-in;
  top: 0;
  opacity: 0.1;
  top: -10px;
}


.pd-modal {
  position: absolute;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.4);
}

.toggle-wrapper {
  display: flex;
  justify-content: space-between;
}
.toggle-input {
  display: none;
}
.toggle-btn {
  position: relative;
  box-sizing: content-box;
  height: 20px;
  width: 40px;
  padding: 2px;
  background: #fbfbfb;
  border: 1px solid #d4d4d4;
  border-radius: 30px;
  cursor: pointer;
  transition: background 0.13s ease-in-out;
  outline: none;
}
.toggle-btn::before {
  content: '';
  display: block;
  position: relative;
  width: 50%;
  height: 100%;
  background: #fbfbfb;
  border-radius: 100%;
  left: 0;
  box-shadow: 0 3px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.2);
  transition: all 0.1s 0.1s ease-in-out;
}
.toggle-btn:focus::before {
  box-shadow: 0 3px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.4);
}
.toggle-btn-on {
  background: lightgreen;
  transition: background 0.13s 0.05s ease-in-out;
}
.toggle-btn, .toggle-btn:focus {
  outline: none;
}
.toggle-btn-on::before {
  left: 50%;
  transition: all 0.1s ease-in;  
}
.toggle-btn-off {

}
.toggle-is-on {

}
.toggle-is-on .toggle-off, .toggle-is-off .toggle-on {
  display: none;
}

/* Additional */
.forward-arrow, .reverse-arrow {
  padding: 25px; 
  background-repeat: no-repeat;
  background-position: center center;
  background-size: 120px;
  margin-left: -25px;
  margin-right: -25px;
  z-index: -10;
  position: relative;
}
.forward-arrow {
  background-image: url('./images/forward-arrow.png');
  
}
.reverse-arrow {
  background-image: url('./images/reverse-arrow.png');
  
}


/* MODAL */
.ReactModal__Overlay {
  z-index: 10;
}

/* Evaluation animations */
.evaluation-item {
  transition: all 0.2s ease-in-out;
}
.evaluation-item-enter {
  opacity: 0;
  position: relative;
  top: -20px;
}
.evaluation-item-enter.evaluation-item-enter-active {
  opacity: 1;
  top: 0;
  transition: all 0.5s ease-in-out;
}
.evaluation-item-leave {
  opacity: 1;
}
.evaluation-item-leave.evaluation-item-leave-active {
  opacity: 0;
  transition: all 0.3s ease-in-out;
}


/* Admin Exercise Form */
.Admin-Exercise-Form {
  font-family: monospace;
}
.Admin-Exercise-Form input, .Admin-Exercise-Form textarea {
  font-size: 0.8rem;
}
.Admin-Exercise-Form .vector-input, .Admin-Exercise-Form .haystack-input {
  height: auto;
  box-sizing: content-box;
}
.Admin-Exercise-Form .vector-input {
}
.Admin-Exercise-Form .haystack-input {
  width: 100ch;
}